<UserControl x:Class="VS.Options.OptionsPageControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:designTime="clr-namespace:VS.Options"
             xmlns:local="clr-namespace:VS.Options"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
             x:Name="OptionsPage"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=designTime:DesignViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="600" d:DesignWidth="400">

    <UserControl.Resources>

        <Style x:Key="HeaderStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="0,0,8,0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="TextWrapping" Value="WrapWithOverflow" />
        </Style>

        <Style x:Key="HeaderButtonStyle" TargetType="Button">
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Padding" Value="5,1" />
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="13"/>
        </Style>

        <Style x:Key="PlaceholderStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="IsHitTestVisible" Value="False"/>
            <Setter Property="Text" Value="(use global setting)"/>
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger
                    Binding="{Binding Path=Children[0].Text, RelativeSource={RelativeSource AncestorType=Grid}}"
                    Value=""
                >
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FieldStyle" TargetType="Control">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="3,2" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <Style x:Key="OptionsGridStyle" TargetType="{x:Type UniformGrid}">
            <Setter Property="Columns" Value="2"/>
            <Setter Property="Margin" Value="10,8,5,15"/>
            <Setter Property="TextBlock.TextWrapping" Value="WrapWithOverflow"/>
            <Style.Resources>
                <Style TargetType="Label" BasedOn="{StaticResource FieldStyle}" />
                <Style TargetType="TextBox" BasedOn="{StaticResource FieldStyle}" />
                <Style TargetType="ComboBox" BasedOn="{StaticResource FieldStyle}" />
            </Style.Resources>
        </Style>

        <!-- Global options group -->

        <DataTemplate x:Key="GlobalOptions" DataType="{x:Type local:GlobalOptionsGroup}">
            <StackPanel>
                <TextBlock Style="{StaticResource HeaderStyle}">Global</TextBlock>

                <UniformGrid  Style="{StaticResource OptionsGridStyle}">
                    <Label Content="Wrapping column:"/>
                    <Grid>
                        <TextBox
                            Text="{Binding WrappingColumn, Converter={local:ValueConverter}, UpdateSourceTrigger=PropertyChanged}"
                            ToolTip="Column to wrap at; for example, '80' will wrap after 80 characters. Leave blank to rulers instead."
                            />
                        <TextBlock Text="(use rulers/guides)" Style="{StaticResource PlaceholderStyle}"/>
                    </Grid>

                    <Label Content="Wrap whole comment:" />
                    <ComboBox
                            SelectedValue="{Binding WholeComment, Converter={local:ValueConverter}}"
                            ToolTip="With the cursor inside a comment block, wrap the whole comment instead of just a single paragraph."
                            >
                        <ComboBox.Items>
                            <sys:String>True</sys:String>
                            <sys:String>False</sys:String>
                        </ComboBox.Items>
                    </ComboBox>

                    <Label Content="Double sentence spacing:"/>
                    <ComboBox
                        SelectedValue="{Binding DoubleSentenceSpacing, Converter={local:ValueConverter}}"
                        ToolTip="When wrapping lines that end in a period, add two spaces after that sentence in the wrapped text."
                        >
                        <ComboBox.Items>
                            <sys:String>True</sys:String>
                            <sys:String>False</sys:String>
                        </ComboBox.Items>
                    </ComboBox>

                    <Label Content="Reformat (experimental):" />
                    <ComboBox
                        SelectedValue="{Binding Reformat, Converter={local:ValueConverter}}"
                        ToolTip="When wrapping lines, fix and reformat paragraph indents."
                        >
                        <ComboBox.Items>
                            <sys:String>True</sys:String>
                            <sys:String>False</sys:String>
                        </ComboBox.Items>
                    </ComboBox>
                </UniformGrid>
            </StackPanel>
        </DataTemplate>

        <!-- Language-specific options group -->

        <DataTemplate x:Key="LanguageOptions" DataType="{x:Type local:OptionsGroup}">

            <StackPanel>
                <DockPanel>
                    <Button
                        Content="..."
                        DockPanel.Dock="Right"
                        Style="{StaticResource HeaderButtonStyle}"
                        Click="GroupButton_Click"
                        />
                    <TextBlock
                        Style="{StaticResource HeaderStyle}"
                        Text="{Binding Languages, Converter={local:LanguagesHeadingConverter}}"
                        />
                </DockPanel>

                <UniformGrid Style="{StaticResource OptionsGridStyle}">
                    <Label Content="Wrapping column:"/>
                    <Grid>
                        <TextBox
                            Text="{Binding WrappingColumn, Converter={local:ValueConverter}, UpdateSourceTrigger=PropertyChanged}"
                            ToolTip="Column to wrap at; for example, '80' will wrap after 80 characters. Leave blank to use the global setting."
                            />
                        <TextBlock Style="{StaticResource PlaceholderStyle}"/>
                    </Grid>

                    <Label Content="Wrap whole comment:" />
                    <Grid>
                        <ComboBox
                            SelectedValue="{Binding WholeComment, Converter={local:ValueConverter}}"
                            ToolTip="With the cursor inside a comment block, wrap the whole comment instead of just a single paragraph. Leave blank to use the global setting."
                            >
                            <ComboBox.Items>
                                <x:Static Member="sys:String.Empty"/>
                                <sys:String>True</sys:String>
                                <sys:String>False</sys:String>
                            </ComboBox.Items>
                        </ComboBox>
                        <TextBlock Style="{StaticResource PlaceholderStyle}"/>
                    </Grid>

                    <Label Content="Double sentence spacing:"/>
                    <Grid>
                        <ComboBox
                        SelectedValue="{Binding DoubleSentenceSpacing, Converter={local:ValueConverter}}"
                        ToolTip="When wrapping lines that end in a period, add two spaces after that sentence in the wrapped text. Leave blank to use the global setting."
                        >
                            <ComboBox.Items>
                                <x:Static Member="sys:String.Empty"/>
                                <sys:String>True</sys:String>
                                <sys:String>False</sys:String>
                            </ComboBox.Items>
                        </ComboBox>
                        <TextBlock Style="{StaticResource PlaceholderStyle}"/>
                    </Grid>

                    <Label Content="Reformat (experimental):" />
                    <Grid>
                        <ComboBox
                        SelectedValue="{Binding Reformat, Converter={local:ValueConverter}}"
                        ToolTip="When wrapping lines, fix and reformat paragraph indents. Leave blank to use the global setting."
                        >
                            <ComboBox.Items>
                                <x:Static Member="sys:String.Empty"/>
                                <sys:String>True</sys:String>
                                <sys:String>False</sys:String>
                            </ComboBox.Items>
                        </ComboBox>
                        <TextBlock Style="{StaticResource PlaceholderStyle}"/>
                    </Grid>
                </UniformGrid>
            </StackPanel>
        </DataTemplate>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ScrollViewer>
            <StackPanel Margin="5">
                <ContentControl
                    Content="{Binding GlobalOptions}"
                    ContentTemplate="{StaticResource GlobalOptions}"
                    />

                <ItemsControl
                    ItemsSource="{Binding Path=OptionsGroups}"
                    ItemTemplate="{StaticResource LanguageOptions}"
                    />

                <Button
                    Style="{StaticResource HeaderButtonStyle}"
                    Click="GroupButton_Click"
                    >
                    Add...
                </Button>
            </StackPanel>
        </ScrollViewer>
        <Border
            Padding="5"
            Grid.Row="1"
            BorderThickness="0,0.5,0,0"
            BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
            >
            <StackPanel>
                <TextBlock x:Name="TipBox" Margin="0,0,0,5" TextWrapping="WrapWithOverflow">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <Trigger Property="Text" Value="">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock TextWrapping="WrapWithOverflow">
                    <Hyperlink
                        NavigateUri="https://dnut.github.io/Rewrap/configuration-visual-studio/"
                        RequestNavigate="OpenLinkInBrowser"
                        >
                            More info at can be found here
                    </Hyperlink>.
                </TextBlock>
            </StackPanel>
        </Border>
        <Popup x:Name="LanguagesPopup" AllowsTransparency="True" Placement="Bottom" StaysOpen="False"
               DataContext="{Binding LanguagesPicker}">
            <Popup.Resources>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="0,0,0,5" />
                    <Setter Property="Padding" Value="4,3" />
                    <Setter Property="MinWidth" Value="45" />
                </Style>
            </Popup.Resources>
            <Grid Margin="5">
                <Border BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                    BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="3" Opacity="0.4"/>
                    </Border.Effect>
                </Border>
                <StackPanel
                    Margin="5"
                    Orientation="Horizontal"
                    Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                    >
                    <ItemsControl x:Name="LanguageList" ItemsSource="{Binding Languages}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel MaxHeight="220" Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <CheckBox
                                    Margin="0,0,20,2"
                                    IsChecked="{Binding Selected}"
                                    Content="{Binding Name}"
                                    />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <DockPanel>
                        <Button DockPanel.Dock="Bottom" Margin="0"
                                Click="RemoveButton_Click">Remove Group</Button>
                        <StackPanel>
                            <Button Click="OkButton_Click">OK</Button>
                            <Button Click="CancelButton_Click">Cancel</Button>
                        </StackPanel>
                    </DockPanel>
                </StackPanel>
            </Grid>
        </Popup>
    </Grid>
</UserControl>
